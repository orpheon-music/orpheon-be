services:
  server:
    build: .
    ports:
      - "8000:8000"
    networks:
      - network
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:16.1-alpine
    ports:
      - 5434:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PORT=${DB_PORT}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - network
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
      start_period: 10s
      start_interval: 5s
      interval: 15s
      timeout: 5s
      retries: 3
  redis:
    image: redis:7.0-alpine
    ports:
      - 6379:6379
    networks:
      - network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      start_period: 10s
      start_interval: 5s
      interval: 15s
      timeout: 5s
      retries: 3
    volumes:
      - redis:/data
volumes:
  postgres:
    driver: local
  redis:
    driver: local

networks:
  network:
    driver: bridge

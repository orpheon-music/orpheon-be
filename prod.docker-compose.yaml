services:
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - network
  server:
    build: .
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.peaknflow-be.rule=Host(`api.orpheon.site`)"
      - "traefik.http.routers.peaknflow-be.entrypoints=web"
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "8000:8000"
    networks:
      - network
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:16.1-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PORT=${DB_PORT}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - network
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
      start_period: 10s
      start_interval: 5s
      interval: 15s
      timeout: 5s
      retries: 3
  redis:
    image: redis:7.0-alpine
    ports:
      - 6379:6379
    networks:
      - network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      start_period: 10s
      start_interval: 5s
      interval: 15s
      timeout: 5s
      retries: 3
    volumes:
      - redis:/data
  rabbitmq:
    image: rabbitmq:4.1.2-management-alpine
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      start_period: 10s
      start_interval: 5s
      interval: 15s
      timeout: 5s
      retries: 3
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq:/var/lib/rabbitmq

volumes:
  postgres:
    driver: local
  redis:
    driver: local
  rabbitmq:
    driver: local

networks:
  network:
    driver: bridge
